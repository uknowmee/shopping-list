// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Shopping.List.App.Blazor.Database.ShoppingList;

#nullable disable

namespace Shopping.List.App.Blazor.Database.ShoppingList.Migrations
{
    [DbContext(typeof(ShoppingListCtx))]
    partial class ShoppingListCtxModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Shopping.List.App.Blazor.Database.ShoppingList.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationDate");

                    b.Property<bool>("IsBought")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ItemListId")
                        .HasColumnType("uuid")
                        .HasColumnName("ItemListId");

                    b.Property<Guid?>("PictureId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ItemListId");

                    b.HasIndex("PictureId");

                    b.HasIndex("UserId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Shopping.List.App.Blazor.Database.ShoppingList.ItemList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationDate");

                    b.Property<DateTimeOffset?>("DueTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsRealized")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Lists");
                });

            modelBuilder.Entity("Shopping.List.App.Blazor.Database.ShoppingList.ItemPicture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("Shopping.List.App.Blazor.Database.ShoppingList.ShoppingUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Shopping.List.App.Blazor.Database.ShoppingList.Item", b =>
                {
                    b.HasOne("Shopping.List.App.Blazor.Database.ShoppingList.ItemList", null)
                        .WithMany("Items")
                        .HasForeignKey("ItemListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shopping.List.App.Blazor.Database.ShoppingList.ItemPicture", "Picture")
                        .WithMany()
                        .HasForeignKey("PictureId");

                    b.HasOne("Shopping.List.App.Blazor.Database.ShoppingList.ShoppingUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Picture");
                });

            modelBuilder.Entity("Shopping.List.App.Blazor.Database.ShoppingList.ItemList", b =>
                {
                    b.HasOne("Shopping.List.App.Blazor.Database.ShoppingList.ShoppingUser", null)
                        .WithMany("Lists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shopping.List.App.Blazor.Database.ShoppingList.ItemPicture", b =>
                {
                    b.HasOne("Shopping.List.App.Blazor.Database.ShoppingList.ShoppingUser", null)
                        .WithMany("Pictures")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shopping.List.App.Blazor.Database.ShoppingList.ItemList", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Shopping.List.App.Blazor.Database.ShoppingList.ShoppingUser", b =>
                {
                    b.Navigation("Lists");

                    b.Navigation("Pictures");
                });
#pragma warning restore 612, 618
        }
    }
}
